<tool id="FaQCs_docker" name="Fastq QC" version="1.3.4">
  <description>Trim and QC fastq files / Docker ver.</description>

  <requirements>
    <container type="docker">inutano/faqcs:galaxy-integrated-0.1.2</container>
  </requirements>

  <command><![CDATA[
    ## disable warnings by -X to avoid to be handled as failure on Galaxy
    perl -X /FaQCs/FaQCs.pl

    ## number of process
    -t 2

    #if $condition1.qctype=="1"
      -qc_only
    #end if

    #if $condition2.inputOpt != "1"
      #for $i in $condition2.pe_input
        -p ${i.pe1} ${i.pe2}
      #end for
    #end if

    #if $condition2.inputOpt != "2"
      #for $i in $condition2.se_input
        -u ${i.se}
      #end for
    #end if

    ## Targets # as quality level (default 5) for trimming
    -q $bwa_q

    ## Average quality cutoff (default:0, no filtering)
    -avg_q $avg_q

    ## Trimmed read should have to be at least this minimum length (default:50)
    -min_L $min_length

    ## Trimmed read has more than this number of continuous base "N" will be discarded. (default: 2, "NN")
    -n $N_num

    ## Low complexity filter ratio, Maximum fraction of mono-/di-nucleotide sequence  (default: 0.85)
    -lc $lc

    ## outpud directory
    -d .

    ## Outputs
    -stats $stats
    -QRpdf $report
    -R1 $r1
    -R2 $r2
    -Ru $unpair

    #if $condition3.select=="yes"
      -discard
      -Rd $discard
    #end if

    #if $condition4.select=="yes"
      -adapter
      -artifactFile $adapters
    #end if

    #if $condition5.select=="yes"
      -phiX
    #end if

    #if $condition6.select=="yes"
      -substitute
    #end if
  ]]></command>

  <inputs>
    <conditional name="condition1">
       <param name="qctype" type="select" label="QC type">
             <option value="1">Check quality by subsample only</option>
             <option value="2" selected="true">Trim Reads</option>
      </param>
      <when value="1"/>
      <when value="2"/>
    </conditional>

    <conditional name="condition2">
      <param name="inputOpt" type="select" label="Input" help="Paired-end reads, Unpaired reads, or Combined">
        <option value="1">Unpaired reads only</option>
        <option value="2">Paired reads only</option>
        <option value="3" selected="true">Combined PE and SE</option>
      </param>
      <when value="1">
        <repeat name="se_input" title="Unpaired input file">
          <param name="se" type="data" format="fastq" label="fastq file"/>
        </repeat>
      </when>
      <when value="2">
        <repeat name="pe_input" title="Paired input file">
          <param name="pe1" type="data" format="fastq" label="First Paired file"/>
          <param name="pe2" type="data" format="fastq" value="yes" label="Second Paired file"/>
        </repeat>
      </when>
      <when value="3">
        <repeat name="pe_input" title="Paired input file">
          <param name="pe1" type="data" format="fastq" label="First Paired file"/>
          <param name="pe2" type="data" format="fastq" value="yes" label="Second Paired file"/>
        </repeat>
        <repeat name="se_input" title="Unpaired input file">
          <param name="se" type="data" format="fastq" label="fastq file"/>
        </repeat>
      </when>
    </conditional>

      <!-- <param name="params" type="text" size="50" value="-q 5 -min_L 50 -out_ascii 33 -prefix QC" label="TrimQC arguments"/>-->
    <param name="bwa_q" type="integer" value="5" label="The quality threshold for trimming from end" min="0" />
    <param name="avg_q" type="float" value="5.0" label="average quality threshold" min="0" />
    <param name="min_length" type="integer" value="50" label="minimum length threshold after trimming"/>
    <param name="N_num" type="integer" value="2" label="Trimmed read has more than this number of continuous base 'N' will be discarded." min="0" />
    <param name="lc" type="float" value="0.85" label="Maximum fraction of mono-/di-nucleotide sequence" min="0.0" max="1.0"/>
    <conditional name="condition4">
      <param name="select" type="select" label="Trim Reads with Adapters/Primers">
             <option value="no" selected="true">No</option>
             <option value="yes">Yes</option>
      </param>
      <when value="no"/>
      <when value="yes">
          <param name="adapters" type="data" format="fasta" label="fasta file"/>
      </when>
    </conditional>
    <conditional name="condition5">
      <param name="select" type="select" label="Filter phiX reads">
             <option value="no" selected="true">No</option>
             <option value="yes">Yes</option>
      </param>
      <when value="no"/>
      <when value="yes"/>
    </conditional>
    <conditional name="condition6">
      <param name="select" type="select" label="Replace 'N' in the trimmed reads with random base A,T,C ,or G">
             <option value="no" selected="true">No</option>
             <option value="yes">Yes</option>
      </param>
      <when value="no"/>
      <when value="yes"/>
    </conditional>
    <conditional name="condition3">
      <param name="select" type="select" label="Output discarded reads">
             <option value="no" selected="true">No</option>
             <option value="yes">Yes</option>
      </param>
      <when value="no"/>
      <when value="yes"/>
    </conditional>

  </inputs>
  <outputs>
    <data name='stats' format='txt' label='${tool.name} QC.stats'/>

    <data name='report' format='pdf' label='${tool.name} QC.report'/>

    <data name='fastqCount' format='txt' label='fastqCount' from_work_dir='fastqCount.txt'/>

    <data name='unpair' format='fastq' label='${tool.name} unpaired.fastq'>
      <filter>condition1['qctype'] == "2"</filter>
    </data>

    <data name='r1' format='fastq' label='${tool.name} R1.trimmed.fastq'>
      <filter>condition1['qctype'] == "2" and condition2['inputOpt'] != "1"</filter>
    </data>

    <data name='r2' format='fastq' label='${tool.name} R2.trimmed.fastq '>
      <filter>condition1['qctype'] == "2" and condition2['inputOpt'] != "1"</filter>
    </data>

    <data name="discard" format="fastq"  label='${tool.name} discarded.fastq' >
      <filter>(condition3['select'] == "yes" and condition1['qctype'] == "2")</filter>
    </data>
  </outputs>

  <help>

.. class:: infomark

**Input example:** You can try out the tool using the test dataset (250,00 x 2 100bp paired end reads ) available at: http://dl.dropbox.com/u/8886965/test.1.fastq and http://dl.dropbox.com/u/8886965/test.2.fastq . There is no need to download the file, you can just copy-and-paste the dataset address in the "Upload File" module inside the "Load Data" link here in the left panel.

.. class:: infomark

**Computational time:** Unless the server is overloaded, you should expect the tool to process the test dataset linked above (250,00 reads x 2 100bp) should take no more than 2 mins to complete.

.. class:: infomark

**Tip:** If your input is in interlaced FASTQ you can de-interlace it into left and right mates two FASTQ files using the corresponding Galaxy module included in the "NGS: QC and manipulation: FASTQ de-interlacer" tools.

---------

**What it does**

FaQCs is a computational tool for preprocessing the sequencing data in FASTQ format.

Although the tool can use 'jellyfish' to report kmer frequency profile, this Galaxy module doesn't use it for computational reasons.

Please notice that most of the additional parameters that can be tuned with the command line version are set here to the default values.

---------

**Inputs**

The input Fastq files either paired-end or unpaired reads or both. They are loaded with the "Get Data" module in the left panel. In theory, there is no Reads length limitation.

A test dataset you can use as sample input is available at http://dl.dropbox.com/u/8886965/test.1.fastq and http://dl.dropbox.com/u/8886965/test.2.fastq

**Outputs**

1.  Two Paired-ends files if input paired-end reads
2.  One unpaired reads file
3.  trimming statistical text file
4.  quality report pdf file

-----

**Citation and contacts**

If you find FaQCs useful in your research, please cite our paper:

| `Chien-Chi Lo`_ ,...  `Patrick Chain`_.
| `Rapid evaluation and Quality Control of Next Generation Sequencing Data with FaQCs.`_
| BMC Bioinformatics. 2014 Nov 19;15


.. _Chien-Chi Lo: chienchi@lanl.gov
.. _Patrick Chain: pchain@lanl.gov
.. _Rapid evaluation and Quality Control of Next Generation Sequencing Data with FaQCs.: http://www.ncbi.nlm.nih.gov/pubmed/25408143

| If you have any questions or comments, feel free to `contact  us`_.

.. _contact us: chienchi@lanl.gov

-----

.. class:: infomark

**Installing FaQCs in your Galaxy environment**

Your are wellcome to include this module in your local Galaxy installation. You can find the source file for the module and the instructions to integrate it in the "galaxy_module" folder at

https://github.com/chienchi/FaQCs

-----

This Galaxy tool XML is fixed for container execution by Tazro Ohta: t.ohta@dbcls.rois.ac.jp

  </help>

  <citations>
    <citation type="doi">10.1186/s12859-014-0366-2</citation>
  </citations>
</tool>
